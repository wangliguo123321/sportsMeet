<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.sport.mapper.ResultMapper">
  <resultMap id="BaseResultMap" type="com.project.sport.pojo.Result">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="t_name" jdbcType="VARCHAR" property="t_name" />
    <result column="t_stucollege1" jdbcType="VARCHAR" property="t_stucollege1" />
    <result column="t_stucollege2" jdbcType="VARCHAR" property="t_stucollege2" />
    <result column="t_stucollege3" jdbcType="VARCHAR" property="t_stucollege3" />
    <result column="t_stuname1" jdbcType="VARCHAR" property="t_stuname1" />
    <result column="t_stuname2" jdbcType="VARCHAR" property="t_stuname2" />
    <result column="t_stuname3" jdbcType="VARCHAR" property="t_stuname3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, t_name, t_stucollege1, t_stucollege2, t_stucollege3, t_stuname1, t_stuname2, 
    t_stuname3
  </sql>
  <select id="selectByExample" parameterType="com.project.sport.pojo.ResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from t_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_result
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_result
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.project.sport.pojo.Result" useGeneratedKeys="true">
    insert into t_result (t_name, t_stucollege1, t_stucollege2, 
      t_stucollege3, t_stuname1, t_stuname2, 
      t_stuname3)
    values (#{t_name,jdbcType=VARCHAR}, #{t_stucollege1,jdbcType=VARCHAR}, #{t_stucollege2,jdbcType=VARCHAR}, 
      #{t_stucollege3,jdbcType=VARCHAR}, #{t_stuname1,jdbcType=VARCHAR}, #{t_stuname2,jdbcType=VARCHAR}, 
      #{t_stuname3,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.project.sport.pojo.Result" useGeneratedKeys="true">
    insert into t_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="t_name != null">
        t_name,
      </if>
      <if test="t_stucollege1 != null">
        t_stucollege1,
      </if>
      <if test="t_stucollege2 != null">
        t_stucollege2,
      </if>
      <if test="t_stucollege3 != null">
        t_stucollege3,
      </if>
      <if test="t_stuname1 != null">
        t_stuname1,
      </if>
      <if test="t_stuname2 != null">
        t_stuname2,
      </if>
      <if test="t_stuname3 != null">
        t_stuname3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="t_name != null">
        #{t_name,jdbcType=VARCHAR},
      </if>
      <if test="t_stucollege1 != null">
        #{t_stucollege1,jdbcType=VARCHAR},
      </if>
      <if test="t_stucollege2 != null">
        #{t_stucollege2,jdbcType=VARCHAR},
      </if>
      <if test="t_stucollege3 != null">
        #{t_stucollege3,jdbcType=VARCHAR},
      </if>
      <if test="t_stuname1 != null">
        #{t_stuname1,jdbcType=VARCHAR},
      </if>
      <if test="t_stuname2 != null">
        #{t_stuname2,jdbcType=VARCHAR},
      </if>
      <if test="t_stuname3 != null">
        #{t_stuname3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.sport.pojo.Result">
    update t_result
    <set>
      <if test="t_name != null">
        t_name = #{t_name,jdbcType=VARCHAR},
      </if>
      <if test="t_stucollege1 != null">
        t_stucollege1 = #{t_stucollege1,jdbcType=VARCHAR},
      </if>
      <if test="t_stucollege2 != null">
        t_stucollege2 = #{t_stucollege2,jdbcType=VARCHAR},
      </if>
      <if test="t_stucollege3 != null">
        t_stucollege3 = #{t_stucollege3,jdbcType=VARCHAR},
      </if>
      <if test="t_stuname1 != null">
        t_stuname1 = #{t_stuname1,jdbcType=VARCHAR},
      </if>
      <if test="t_stuname2 != null">
        t_stuname2 = #{t_stuname2,jdbcType=VARCHAR},
      </if>
      <if test="t_stuname3 != null">
        t_stuname3 = #{t_stuname3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.sport.pojo.Result">
    update t_result
    set t_name = #{t_name,jdbcType=VARCHAR},
      t_stucollege1 = #{t_stucollege1,jdbcType=VARCHAR},
      t_stucollege2 = #{t_stucollege2,jdbcType=VARCHAR},
      t_stucollege3 = #{t_stucollege3,jdbcType=VARCHAR},
      t_stuname1 = #{t_stuname1,jdbcType=VARCHAR},
      t_stuname2 = #{t_stuname2,jdbcType=VARCHAR},
      t_stuname3 = #{t_stuname3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>